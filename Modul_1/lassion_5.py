# Практическое задание по теме: "Неизменяемые и изменяемые объекты. Кортежи и списки"
# Цель:
# Написать программу на языке Python, используя Pycharm, для работы с неизменяемыми и изменяемыми объектами.
# 1. В проекте, где вы решаете домашние задания, создайте модуль 'module_1_5.py' и напишите весь код в нём.
# 2. Задайте переменные разных типов данных:
# - Создайте переменную immutable_var и присвойте ей кортеж из нескольких элементов разных типов данных.
# - Выполните операции вывода кортежа immutable_var на экран.
# 3. Изменение значений переменных:
# - Попытайтесь изменить элементы кортежа immutable_var. Объясните, почему нельзя изменить значения элементов кортежа.
# 4. Создание изменяемых структур данных:
# - Создайте переменную mutable_list и присвойте ей список из нескольких элементов.
# - Измените элементы списка mutable_list.
# - Выведите на экран измененный список mutable_list.
# Примечания:
# - Для вывода значений на экран используйте функцию print().
# - Обратите внимание на особенности изменяемых и неизменяемых объектов в Python.
# Пример результата выполнения программы:
# Immutable tuple: (1, 2, 'a', 'b')
# Mutable list: [1, 2, 'a', 'b', 'Modified']
# Напишите код к домашнему заданию в ответе (комментарии).


################ Решение ################
immutabel_var = (1, 2, 'a', 'b', True)
print("Immutable tuple: ", immutabel_var)

# Попытка изменить элемент кортежа
# immutaibel_var[0] = 100 # Эта строка вызовет ошибку, так как кортеж неизменяемый
# Объяснение: Кортежи в Python являются неизменяемыми структурами данных, поэтому нельзя изменить его элементы.
# Если требуется изменить, нужно создать новый кортеж с необходимыми значениями.

mutable_list = [5, 6, 'a', 'b', False]
mutable_list[0] = 32
mutable_list.append("Modified")
print("Mutable list: ", mutable_list)